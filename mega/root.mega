

object Root
{
    dependency( cube.mega );

    link Sockets : SocketChild;

    dim int m_testDimension;
    dim int m_testDimension1;
    dim std::string m_str;
    dim std::vector< int > m_testDimension2;

    event SomeEvent[ 3 ]
    {
        dim int m_x;
        dim int m_y;
        dim int m_z;
        event   A1[ 2 ]
        {
            dim int m_i;
            dim int m_j;
            event   B1[ 3 ]
            {
                dim int m_k;
                dim std::string m_str;
            }
        }
    }

    include( <string> );
    include( <sstream> );
    include( <iostream> );

    action TestAction
    {
        std::cout << "TestAction called!" << std::endl;
    }

    function SomeFunction( int x, int y )
        : std::string
    {
        FloorSocket f = FloorSocket();
        f.m_intValue( x + y );

        FloorSocket f2 = FloorSocket();
        f2.m_intValue( x + y );

        inc( x + y );

        std::ostringstream os;
        os << "m_testDimension: " << m_testDimension() << " m_testDimension1: " << m_testDimension1();

        return os.str();
    }

    function inc( int amt )
        : void
    {
        m_testDimension( m_testDimension() + amt );
        m_testDimension1( m_testDimension1() + amt );
    }
}
